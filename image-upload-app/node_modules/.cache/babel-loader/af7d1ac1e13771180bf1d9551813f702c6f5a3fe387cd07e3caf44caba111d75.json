{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\diagnosis\\\\image-upload-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState('');\n\n  // 파일을 선택할 때 호출되는 함수\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // 파일을 서버로 업로드할 때 호출되는 함수\n  const handleUpload = async () => {\n    if (!file) {\n      alert('파일을 선택해주세요.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      // console.log('Upload success', response.data);\n      // alert('업로드 성공!');\n      setResult(JSON.stringify(response.data));\n    } catch (error) {\n      console.error('Upload error', error);\n      alert('업로드 실패!');\n    }\n  };\n\n  // 결과를 사용자 친화적으로 표시하는 함수\n  const displayResults = results => {\n    if (!results) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(results).map(key => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this), \" \", results[key]]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC \\uBC0F \\uC9C4\\uB2E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"\\uC9C4\\uB2E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), result ? displayResults(result) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LUfx3V420AGZ2fKcFSrj/THOmIk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","result","setResult","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","post","headers","JSON","stringify","data","error","console","displayResults","results","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/diagnosis/image-upload-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState('');\n\n  // 파일을 선택할 때 호출되는 함수\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  // 파일을 서버로 업로드할 때 호출되는 함수\n  const handleUpload = async () => {\n    if (!file) {\n      alert('파일을 선택해주세요.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      // console.log('Upload success', response.data);\n      // alert('업로드 성공!');\n      setResult(JSON.stringify(response.data));\n    } catch (error) {\n      console.error('Upload error', error);\n      alert('업로드 실패!');\n    }\n  };\n\n  // 결과를 사용자 친화적으로 표시하는 함수\n  const displayResults = (results) => {\n    if (!results) return <p>No results</p>;\n\n    return (\n      <div>\n        {Object.keys(results).map((key) => (\n          <p key={key}><strong>{key}:</strong> {results[key]}</p>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>이미지 업로드 및 진단</h1>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>진단</button>\n      <div>\n        <h3>Results:</h3>\n        {result ? displayResults(result) : <p>결과가 없습니다.</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}