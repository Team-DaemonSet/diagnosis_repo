{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\finalproject\\\\front\\\\src\\\\components\\\\SignInPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport LoadingSpinner from './LoadingSpinner'; // Import the LoadingSpinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInPage = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSignIn = e => {\n    e.preventDefault();\n    // Here you can add authentication logic\n    // For simplicity, we'll just set isAuthenticated to true\n    setIsAuthenticated(true);\n    navigate('/diagnosis');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container sign-in-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign in \\uD83D\\uDE08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infield\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infield\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"forgot\",\n        children: \"DaemonSet\\uC785\\uB2C8\\uB2E4. \\uD658\\uC601\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(SignInPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = SignInPage;\nexport default SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","useNavigate","LoadingSpinner","jsxDEV","_jsxDEV","SignInPage","setIsAuthenticated","_s","email","setEmail","password","setPassword","navigate","handleSignIn","e","preventDefault","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/finalproject/front/src/components/SignInPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\nimport LoadingSpinner from './LoadingSpinner'; // Import the LoadingSpinner\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SignInPage = ({ setIsAuthenticated }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        // Here you can add authentication logic\r\n        // For simplicity, we'll just set isAuthenticated to true\r\n        setIsAuthenticated(true);\r\n        navigate('/diagnosis');\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container sign-in-container\">\r\n            <form onSubmit={handleSignIn}>\r\n                <h1>Sign in üòà</h1>\r\n                <LoadingSpinner /> {/* Use LoadingSpinner here */}\r\n                \r\n                <div className=\"infield\">\r\n                    <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <label></label>\r\n                </div>\r\n                <div className=\"infield\">\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <label></label>\r\n                </div>\r\n                <button type=\"submit\" className=\"forgot\">DaemonSetÏûÖÎãàÎã§. ÌôòÏòÅÌï©ÎãàÎã§.</button>\r\n                <button type=\"submit\">Sign In</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignInPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}