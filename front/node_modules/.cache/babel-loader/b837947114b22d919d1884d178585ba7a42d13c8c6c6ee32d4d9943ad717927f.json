{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\image-upload-app\\\\diagnosis_repo\\\\front\\\\src\\\\components\\\\DiagnosisPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagnosisPage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imagePreviewUrl, setImagePreviewUrl] = useState('');\n  const [diagnosis, setDiagnosis] = useState('');\n  const [result, setResult] = useState('');\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImagePreviewUrl(reader.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert('파일을 선택해주세요.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setDiagnosis(response.data.Diagnosis);\n      const {\n        Diagnosis,\n        ...classProbs\n      } = response.data;\n      setResult(JSON.stringify(classProbs, null, 2));\n    } catch (error) {\n      console.error('Upload error', error);\n      alert('업로드 실패!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC \\uBC0F \\uC9C4\\uB2E8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        className: \"custom-file-input\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"upload-button\",\n        children: \"\\uD30C\\uC77C \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), imagePreviewUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreviewUrl,\n        alt: \"Selected file preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        className: \"diagnosis-button\",\n        children: \"\\uC9C4\\uB2E8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: diagnosis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(DiagnosisPage, \"tM9ClmO5zUGCVoqLDKlUoh+yGtQ=\");\n_c = DiagnosisPage;\nexport default DiagnosisPage;\nvar _c;\n$RefreshReg$(_c, \"DiagnosisPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DiagnosisPage","_s","file","setFile","imagePreviewUrl","setImagePreviewUrl","diagnosis","setDiagnosis","result","setResult","handleFileChange","event","selectedFile","target","files","reader","FileReader","onloadend","readAsDataURL","handleUpload","alert","formData","FormData","append","response","post","headers","data","Diagnosis","classProbs","JSON","stringify","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","onChange","htmlFor","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/image-upload-app/diagnosis_repo/front/src/components/DiagnosisPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DiagnosisPage = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [imagePreviewUrl, setImagePreviewUrl] = useState('');\r\n    const [diagnosis, setDiagnosis] = useState('');\r\n    const [result, setResult] = useState('');\r\n\r\n    const handleFileChange = (event) => {\r\n        const selectedFile = event.target.files[0];\r\n        setFile(selectedFile);\r\n\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setImagePreviewUrl(reader.result);\r\n        };\r\n        reader.readAsDataURL(selectedFile);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            alert('파일을 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setDiagnosis(response.data.Diagnosis);\r\n            const { Diagnosis, ...classProbs } = response.data;\r\n            setResult(JSON.stringify(classProbs, null, 2));\r\n        } catch (error) {\r\n            console.error('Upload error', error);\r\n            alert('업로드 실패!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>이미지 업로드 및 진단</h1>\r\n            <div className=\"upload-section\">\r\n                <input type=\"file\" id=\"file-upload\" className=\"custom-file-input\" onChange={handleFileChange} />\r\n                <label htmlFor=\"file-upload\" className=\"upload-button\">파일 선택</label>\r\n                {imagePreviewUrl && <img src={imagePreviewUrl} alt=\"Selected file preview\" className=\"image-preview\" />}\r\n                <button onClick={handleUpload} className=\"diagnosis-button\">진단</button>\r\n            </div>\r\n            <div className=\"results-section\">\r\n                <h3>Results:</h3>\r\n                <p>{diagnosis}</p>\r\n                <pre>{result}</pre>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiagnosisPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}